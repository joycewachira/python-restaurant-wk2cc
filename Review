class Customer:
    all_customers = []

    def __init__(self, given_name, family_name):
        self.given_name = given_name
        self.family_name = family_name
        self.reviews = []
        Customer.all_customers.append(self)

    def get_given_name(self):
        return self.given_name

    def get_family_name(self):
        return self.family_name

    def full_name(self):
        return f"{self.given_name} {self.family_name}"

    @classmethod
    def all(cls):
        return cls.all_customers

class Restaurant:
    all_restaurants = []

    def __init__(self, name):
        self.name_value = name
        self.reviews = []
        Restaurant.all_restaurants.append(self)

    def get_name(self):
        return self.name_value

    def get_reviews(self):
        return self.reviews

    def get_customers(self):
        customers = set()
        for review in self.reviews:
            customers.add(review.customer)
        return list(customers)

    @classmethod
    def all(cls):
        return cls.all_restaurants

class Review:
    all_reviews = []

    def __init__(self, customer, restaurant, rating):
        self.customer = customer
        self.restaurant = restaurant
        self.rating_value = rating
        customer.reviews.append(self)
        restaurant.reviews.append(self)
        Review.all_reviews.append(self)

    def get_rating(self):
        return self.rating_value

    @classmethod
    def all(cls):
        return cls.all_reviews

    def customer(self):
        return self.customer

    def restaurant(self):
        return self.restaurant

# Create an instance of Customer for customer1
customer1 = Customer("Joyce", "Wachira")

# Create an instance of Restaurant for restaurant1
restaurant1 = Restaurant("Gourmet Foods and Drinks")

# Adding a review
my_review = Review(customer1, restaurant1, 70)

# Retrieving your review's rating and associated customer and restaurant
print(f"My review rating: {my_review.get_rating()}")
print(f"Customer: {my_review.customer.full_name()}")
print(f"Restaurant: {my_review.restaurant.get_name()}")
